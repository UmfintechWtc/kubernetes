apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus.name" . }}
  labels:
    {{- include "prometheus.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "prometheus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "prometheus.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "prometheus.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --web.listen-address=0.0.0.0:{{ .Values.service.port }}
            {{- range $key, $value := .Values.service.extraArgs }}
            {{- if $value }}
            - --{{ $key }}={{ $value }}
            {{- else }}
            - --{{ $key }}
            {{- end }}
            {{- end }}
          ports:
            - name: prometheus
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: prometheus
              scheme: HTTP
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: prometheus
              scheme: HTTP
            {{- end }}
          volumeMounts:
            - name: datadir
              mountPath: {{ .Values.service.basePath }}/data
            - name: logdir
              mountPath: {{ .Values.service.basePath }}/log
            - name: config
              mountPath: /etc/prometheus.yml
              subPath: prometheus.yml
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: datadir
          hostPath:
            path: {{ .Values.service.basePath }}/data
            type: DirectoryOrCreate
        - name: logdir
          hostPath:
            path: {{ .Values.service.basePath }}/logs
            type: DirectoryOrCreate
        - name: config
          configMap:
            name: {{ include "prometheus.name" . }}