apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "zookeeper.fullname" . }}
  labels: {{- include "zookeeper.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "zookeeper.fullname" . }}-headless
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}
    {{- if (eq "Recreate" .Values.updateStrategy) }}
    rollingUpdate: null
    {{- else if .Values.rollingUpdatePartition }}
    rollingUpdate:
      partition: {{ .Values.rollingUpdatePartition }}
    {{- end }}
  selector:
    matchLabels: {{- include "zookeeper.labels" . | nindent 6 }}
  template:
    metadata:
      name: {{ template "zookeeper.fullname" . }}
      labels: {{- include "zookeeper.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ template "zookeeper.serviceAccountName" . }}
      containers:
        - name: {{ template "zookeeper.fullname" . }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.startPolicy.enabled }}
          command: {{- toYaml .Values.startPolicy.command | nindent 12 }}
          args: {{- toYaml .Values.startPolicy.args | nindent 12 }}
          {{- else }}
          command:
            - bash
            - -ec
            - |
                if [[ -f "/opt/app/zookeeper/data/myid" ]];then
                  export ZOO_SERVER_ID="$(cat /opt/app/zookeeper/data/myid)"
                else
                  HOSTNAME=`hostname`
                  if [[ "$HOSTNAME" =~ (.*)-([0-9]+)$ ]];then
                    only_id=${BASH_REMATCH[2]}
                    export ZOO_SERVER_ID=$((only_id + {{ .Values.minServerId }} ))
                  else
                    echo "Failed to get server ID from hostname $HOSTNAME"
                    exit1
                  fi
                fi
                exec /usr/local/bin/zk_entrypoint.sh
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          livenessProbe:
            exec:
              command: ['/bin/bash', '-c', 'echo "ruok" | timeout {{ .Values.livenessProbe.probeCommandTimeout }} nc -w {{ .Values.livenessProbe.probeCommandTimeout }} localhost {{ .Values.zk_services.ClientPort }} | grep imok']
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          readinessProbe:
            exec:
              command: ['/bin/bash', '-c', 'echo "ruok" | timeout {{ .Values.readinessProbe.probeCommandTimeout }} nc -w {{ .Values.readinessProbe.probeCommandTimeout }} localhost {{ .Values.zk_services.ClientPort }} | grep imok']
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          ports:
            - name: clientport
              containerPort: {{ .Values.zk_services.ClientPort }}
            - name: followerport
              containerPort: {{ .Values.zk_services.FollowerContainerPort }}
            - name: electionport
              containerPort: {{ .Values.zk_services.ElectionContainerPort }}
          volumeMounts:
            - name: datadir
              mountPath: {{ .Values.dataSavePath.containerDataPath }}
            - name: logsdir
              mountPath: {{ .Values.dataSavePath.containerLogsPath }}
            - name: zk-config
              mountPath: /opt/app/zookeeper/conf/zoo.cfg
              subPath: config-zookeeper
      dnsPolicy: ClusterFirst
      volumes:
        - name: datadir
          hostPath:
            path: {{ .Values.dataSavePath.localDataPath }}
            type: {{ .Values.dataSavePath.type }}
        - name: logsdir
          hostPath:
            path: {{ .Values.dataSavePath.localLogsPath }}
            type: {{ .Values.dataSavePath.type }}
        - name: zk-config
          configMap:
            name: {{ template "zookeeper.configname" . }}