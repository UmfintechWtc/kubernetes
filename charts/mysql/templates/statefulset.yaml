apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mysql.name" . }}-statefuleset
#  namespace: {{ .Values.namespace }}
  labels:
    {{- include "mysql.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "mysql.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "mysql.name" . }}-svc
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "mysql.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ include "mysql.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["--default-authentication-plugin=mysql_native_password"]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secret
                key: mysql-root-password
          ports:
          - name: mysql
            containerPort: 3306


          livenessProbe:
            exec:
              command: ["sh", "-c", "exec mysqladmin status -uroot -p$MYSQL_ROOT_PASSWORD"]
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command: ["sh", "-c", "exec mysqladmin status -uroot -p$MYSQL_ROOT_PASSWORD"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
          - name: data
            mountPath: /var/lib/mysql
            subPath: data
          - name: log
            mountPath: /data/mysql
            subPath: logs
          - name: config
            mountPath: /etc/mysql/conf.d/my.cnf
            subPath: my.cnf
      securityContext:
      {{- toYaml .Values.securityContext | nindent 8 }}
      volumes:
      - name: data
        hostPath:
          path: {{ .Values.mysql.datadir }}
          type: DirectoryOrCreate
      - name: log
        hostPath:
          path: {{ .Values.mysql.logdir }}
          type: DirectoryOrCreate
      - name: config
        configMap:
          name: {{ include "mysql.name" . }}
